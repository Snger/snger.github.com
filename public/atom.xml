<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[The Same Summer.]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://snger.github.io//"/>
  <updated>2015-07-12T12:52:35.000Z</updated>
  <id>http://snger.github.io//</id>
  
  <author>
    <name><![CDATA[Snger]]></name>
    <email><![CDATA[sjs.stef@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[处理 Angularjs 兼容 IE8 问题]]></title>
    <link href="http://snger.github.io/2015/06/02/Fixing-AngularJS-problems-in-IE8/"/>
    <id>http://snger.github.io/2015/06/02/Fixing-AngularJS-problems-in-IE8/</id>
    <published>2015-06-02T06:58:22.000Z</published>
    <updated>2015-07-12T12:52:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="项目背景">项目背景</h2><p>项目最早使用的是 angularjs 1.3.x 版本，功能开发完成后，发现使用者中 IE8 用户占比为 ，而且因为项目特质，必须解决用户的 IE8 使用场景，于是乎，有了此文。</p>
<h2 id="目标">目标</h2><p>使用 angularjs 并兼容 IE8 （注：本文不考虑兼容低于 IE8 浏览器的情况）</p>
<h2 id="AngularJS兼容低版本IE文档">AngularJS兼容低版本IE文档</h2><p><a href="https://docs.angularjs.org/guide/ie" target="_blank" rel="external">docs.angularjs.org:Internet Explorer Compatibility</a>:</p>
<blockquote>
<p>Note: AngularJS 1.3 has dropped support for IE* Read more about it on our blog. AngularJS 1.2 will continue to support IE8, but the core team does not plan to spend time addressing issues specific to IE8 or earlier.</p>
</blockquote>
<p>AngularJS 1.3抛弃了对 IE8 的支持，但 AngularJS 1.2 将继续支持 IE8，但核心团队已经不打算在解决 IE8 及之前版本的问题上花时间。本文档介绍了互联网浏览器（IE）在处理自定义 HTML 标签及属性时的特点。如果你正计划在 IE8 或更早的浏览器上部署 Angular 应用请阅读本文。<br>项目目前支持且将尝试修复 IE9 以上的 bug。持续集成服务器在 IE9，IE10 和 IE11 上运行所有的测试。详细内容参加 Travis CI 及 <a href="ci.angularjs.org">ci.angularjs.org</a>。<br>我们不在 IE8 及之前的浏览器上运行测试。一些 AngularJS 的功能子集也许能够在在这些浏览器上工作，但这将由你来测试并决定它在你的特定应用上是否工作。</p>
<p>……</p>
<h2 id="总结">总结</h2><h3 id="全局">全局</h3><ul>
<li>angular 版本降级：1.3.x -〉 1.2.x；</li>
<li>引入 <a href="https://github.com/es-shims/es5-shim" target="_blank" rel="external">es5-shim</a>；</li>
</ul>
<blockquote>
<p>es5-shim可以让一些低级的浏览器支持最新的ecmascript5的一些特性。</p>
</blockquote>
<h3 id="项目">项目</h3><ul>
<li>angularjs 打包(<code>$templateCache</code>)；</li>
</ul>
<blockquote>
<p><a href="https://www.npmjs.com/package/grunt-angular-templates" target="_blank" rel="external">grunt-angular-templates</a><br>Speed up your AngularJS app by automatically minifying, combining, and automatically caching your HTML templates with <code>$templateCache</code>.</p>
</blockquote>
<ul>
<li>不要使用自定义元素标签，比如 &lt;ng:view&gt;，使用 &lt;div ng-view&gt;来取代。</li>
</ul>
<h3 id="Angularjs语法">Angularjs语法</h3><ul>
<li>给根元素添加 <code>id=”ng-app”</code> 属性与 <code>ng-app</code> 属性结合起来。</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">xmlns:ng</span>=<span class="value">"http://angularjs.org"</span> <span class="attribute">id</span>=<span class="value">"ng-app"</span> <span class="attribute">ng-app</span>=<span class="value">"optionalModuleName"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>使用 <code>ng-style</code> 标签来取代 <code>style=””</code></li>
<li>angular 1.2 $route 没有 <code>updateParams</code> 方法，使用 <code>$location.search</code>;(翻页组件)</li>
</ul>
<h3 id="浏览器语法">浏览器语法</h3><ul>
<li>删除代码中 Javascript 保留字列表，例如：delete；</li>
</ul>
<blockquote>
<p>Javascript保留字列表：<br>break delete function return typeof case do if switch var catch else in this void continue false instanceof throw while debugger finally new true with default for null try Javascript未来保留字(Javascript Future Reserved Words)<br>Javascript还有一些未来保留字，这些字虽然现在没有用到Javascript语言中，但是将来有可能用到。<br>Javascript未来保留字列表：<br>abstract double goto native static boolean enum implements package super byte export import private synchronized char extends int protected throws class final interface public transient const float long short volatile</p>
</blockquote>
<ul>
<li>删除 IE8 不支持的测试代码，例如 <code>console.log</code> ；</li>
<li>处理 <code>placeholder</code>；</li>
<li>删除 对象字面量中 最后一个属性后面的不 <code>,</code>；</li>
<li>对于数组不能使用 <code>for..in</code> 在 IE8 下会有问题, <a href="http://stackoverflow.com/questions/9085018/ie8-for-in-enumerator" target="_blank" rel="external">ie8-for-in-enumerator</a> ；</li>
</ul>
<h3 id="组件兼容性">组件兼容性</h3><ul>
<li>时间选择控件有问题；</li>
<li>单选框、复选框 选中图片没变化，貌似使用 ng-checked 才可以；</li>
<li>excel 导入 upload 组件有问题；<br>  a. 上传请求后端返回 content-type 需要改成  Content-Type:text/html; charset=UTF-8</li>
<li>input[number] max 不支持表达式（模板中好像连数值10也不支持），重新写指令；</li>
<li>部分用户反馈 改最终价不生效，后面发现是因为 不响应 ng-keyup 事件，换成 ng-change；</li>
</ul>
<h3 id="低级错误">低级错误</h3><ul>
<li><code>form</code> 错写成 <code>from</code> 造成元素上的控制器无效；</li>
</ul>
<h3 id="针对_IE8_优化">针对 IE8 优化</h3><ul>
<li>判断 ie8 则限制默认列表数量；</li>
<li>infiniteScroll 优化加载速度；</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="项目背景">项目背景</h2><p>项目最早使用的是 angularjs 1.3.x 版本，功能开发完成后，发现使用者中 IE8 用户占比为 ，而且因为项目特质，必须解决用户的 IE8 使用场景，于是乎，有了此文。</p>
<h2 id="目标">目标</h2><]]>
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[查看代码变更（或审查代码）的建议]]></title>
    <link href="http://snger.github.io/2014/02/27/use-vimdiff/"/>
    <id>http://snger.github.io/2014/02/27/use-vimdiff/</id>
    <published>2014-02-27T04:35:06.000Z</published>
    <updated>2014-03-14T16:28:55.000Z</updated>
    <content type="html"><![CDATA[<p>目前的工作流中，是使用branch来管理不同的功能点开发的，那么我们怎样能比较不同branch的不同呢？<br>在更新代码量不大的情况下使用 git diff  branch1 branch2 , 就可以了；但这个方法也有一些缺点：</p>
<ol>
<li>在更新代码很多的时候，不能看到代码改动的整体情况；</li>
<li>因为只能显示不同点的上下几行，不够直观，不方便理解；</li>
<li>有遇到有的部分更改没显示的情况；</li>
</ol>
<h4 id="可针对性地配合以下方式：">可针对性地配合以下方式：</h4><ol>
<li>git diff —stat branch1 branch2   统计有哪些文件被改动，有多少行被改动</li>
<li>git diff —shortstat branch1 branch2 只显示 —stat 中最后的行数修改添加移除统计。</li>
<li>git diff —dirstat branch1 branch2  以百分比的方式统计文件夹的改动情况</li>
<li>使用 vimdiff 查看代码变更，具体操作如下：</li>
</ol>
<hr>
<h2 id="使用_vimdiff_来审查代码:">使用 vimdiff 来审查代码:</h2><pre><code>确认模式： git difftool -t vimdiff +对比两分支
静默模式： git difftool -t vimdiff -y +对比两分支</code></pre>



<h3 id="进入_vimdiff_后，切换窗口：">进入 vimdiff 后，切换窗口：</h3><p>窗口焦点切换，即切换当前窗口</p>
<pre><code>CTRL-w h 跳转到左边的窗口
CTRL-w j 跳转到下面的窗口
CTRL-w CTRL-w 跳转到另一个窗口，同CTRL-w w </code></pre>



<h3 id="同时退出两个_vi_窗口：">同时退出两个 vi 窗口：</h3><pre><code>:qa （当前文件审核通过，）同时退出两个 vi 窗口（，进入下一个文件审核） </code></pre>

<h3 id="代码审核中，滚动：">代码审核中，滚动：</h3><pre><code>jkhl 基本的上下左右  
CTRL-U 向上滚动半屏  
CTRL-D 向下移动半屏  
CTRL-F 向下滚动一整屏(forward)  
CTRL-B 向上滚动一整屏(backward)
32j    向下跳32行
CTRL-G 显示当前所在文件中的位置（例如："usr_03.txt" line 233 of 650 --35%-- col 45-52）
:set number 显示行号
:set nonumber 不显示行号
gg   回到页首
]c   跳转到下一个差异点
[c   跳转到上一个差异点
zo   临时展开被折叠的相同的文本行
zc   重新折叠相同的文本行</code></pre>

<h3 id="编辑">编辑</h3><pre><code>u      撤销上一步的操作
Ctrl+r 恢复上一步被撤销的操作</code></pre>

<h3 id="其他设置：">其他设置：</h3><pre><code>:set noscrollbind  关闭两侧文件的对齐（滚动不同步）</code></pre>

<p>可参考：【技巧：Vimdiff 使用】 <a href="https://www.ibm.com/developerworks/cn/linux/l-vimdiff/" target="_blank" rel="external">https://www.ibm.com/developerworks/cn/linux/l-vimdiff/</a></p>
<p>使用 git 做 code review 比较给力的模式应该参看<a href="http://tchen.me/posts/2014-02-24-codereview.html" target="_blank" rel="external">闲扯code review</a>这篇博文，注意这目前只是模型；</p>
]]></content>
    <summary type="html">
    <![CDATA[目前的工作流中，是使用branch来管理不同的功能点开发的，那么我们怎样能比较不同branch的不同呢？]]>
    
    </summary>
    
      <category term="git" scheme="http://snger.github.io/tags/git/"/>
    
      <category term="vim" scheme="http://snger.github.io/tags/vim/"/>
    
      <category term="vimdiff" scheme="http://snger.github.io/tags/vimdiff/"/>
    
      <category term="工具" scheme="http://snger.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[记录上次列表所在分页数]]></title>
    <link href="http://snger.github.io/2014/02/20/record-page-num/"/>
    <id>http://snger.github.io/2014/02/20/record-page-num/</id>
    <published>2014-02-20T05:54:29.000Z</published>
    <updated>2015-07-09T03:46:25.000Z</updated>
    <content type="html"><![CDATA[<p>需求描述：“异步获取列表的，如果点击列表的某一行进入详情页，在详情页处理完要返回列表页的时候，能否返回之前所在的分页？ ”</p>
<p>现有有两个可行的方案：1.使用 url参数 来记录之前的分页数；2.使用 HTML5 sessionStorage 记录之前的分页数；</p>
<p><strong>方案1：</strong>特点是可以特定某些链接跳回列表页时回到之前所在分页；缺点是改动文件多，改动量大，容易出错；宝贝-标题优化已使用这种方式；</p>
<p><strong>方案2：</strong>特点是对一个 session 进行分页数存储，无论哪个页面跳到列表页都可以回到之前所在分页；优点是只改 js；缺点是得针对 IE6、IE7 做兼容（已有方案可解决）；【个人推荐】</p>
<hr>
<h3 id="方案1">方案1</h3><p>进度（toushou-tbv3）：<br>a.已完成：素材-投放管理；<br>b.前端完成：素材-海报（跳回链接需在 flash 中添加）；<br>c.前端完成后发现无需（囧）：素材关联列表（所有）-》制作完成后跳到“我的关联列表”</p>
<p><strong>说明：</strong>改动了4个页面，分别对应1、2、3、4；第3步 a 的方法可能丢失分页参数（如果在操作页不是点击链接返回列表，而是用浏览器的返回按钮、或是 Mac 系统用双指回退），在之后异步 block 回传数据，用 js 渲染列表内容可避免这个问题；以下例子是 tbv3的素材-投放管理页的修改步骤；</p>
<h4 id="步骤：">步骤：</h4><ol>
<li>列表所在的 phtml 页面，添加<pre><code>&lt;input type="hidden" id="J_PageId" value="<?php echo $this->getRequest()->getParam('page_id','1');?>" /></code></pre></li>
<li>在异步加载的（block）html，给需要跳转链接记住上次所在分页的<a>上加 <code>class= J_LiA</code>；如果此链接不是使用 href 跳转而是用 onclick 控制，则分解 onclick 事件：链接放到 data-url 属性中；在第3步 a 中处理onclick 事件；</a></li>
<li><p>列表所在的 js 页面：<br> a. 对象中加入分页记录属性：</p>
 <pre><code>pageId : DOM.val(DOM.get("#J_PageId")),</code></pre>

<p> b. 渲染异步列表后，用 js 给链接加分页参数，（例如在 renderItems() 方法中）</p>
<pre><code>1.如果第2步使用 href 跳转：
</code></pre></li>
</ol>
<pre>
<code>var liA = DOM.query('#J_MaterialItems .J_LiA');

S.later(function(){

    for(var i=0;i<lia.length;i++){ var="" oldlink="DOM.attr(liA[i],'href');" newlink="oldLink+'&page_id='+listControl.pageId;" dom.attr(lia[i],'href',newlink);="" }="" },100)="" <="" code=""></lia.length;i++){></code></pre>


<p>如果第2步使用 onclick 跳转：</p>
<pre>
<code>Event.on('.J_LiA','click',function(ev){

    if(!showPermissions('editor_material','促销素材')){return ;}

    var link = DOM.attr(ev.currentTarget,'data-url');

window.location.href=link+'&page_id='+templet.pageId;
    //window.open(link+'&page_id='+templet.pageId);

})
</code></pre>

<p>加载列表的方法（例如：searchPutItems() ），第一行加入<br><code>var pageId = listControl.pageId;</code><br>加载列表的方法，发送的请求中多加参数<br><code>+&quot;&amp;page_id=&quot;+pageId</code><br>加载列表的方法，成功后的回调（例如：submitHandle() ），渲染完分页后，再指定分页跳转；例如：</p>
<pre>
<code>if(pageId > 1){
    listControl.paginator.setPage(pageId).setPageCount(pageCount).printHtml('#J_Paging',2);
}
</code></pre>

<p>分页操作的方法第一行加入：<br><code>listControl.pageId  = turnTo;</code><br>在列表页跳出的操作页面，给需要跳回上次所在分页的链接所在的 php echo 方法中加入<br><code>,array(&#39;page_id&#39;=&gt;$this-&gt;getRequest()-&gt;getParam(&#39;page_id&#39;,&#39;1&#39;))</code><br>例如：</p>
  <pre><code>&lt;a href="<?php echo $this->getUrl('material/show/index',array('page_id'=>$this->getRequest()->getParam('page_id','1')))?>"></code></pre>



<p>—————————————————————方案2分割线————————————————————————</p>
<p>说明：只改动列表页所在的 js；</p>
<p>步骤：</p>
<p>分页控制方法中，把分页存入 sessionStorage：</p>
<pre>
<code>if(window.sessionStorage){
  var ss = window.sessionStorage;
  var last_pagination = {'udp_item_index' : turnTo};

  ss.setItem("hlg_ss_tbv3",JSON.stringify(last_pagination));

}
</code></pre>

<p>加载列表的方法中，读取 sessionStorage，并指定分页数：<br>a.获取分页数：</p>
<pre>
<code>var ss = window.sessionStorage;
var hlg_ss = JSON.parse(ss['hlg_ss_tbv3']);

if(ss && ss.getItem('hlg_ss_tbv3') && hlg_ss['udp_item_index']){

  var pageId = parseInt(hlg_ss['udp_item_index']);

 }else{

  var pageId = 1;

}
</code></pre>

<p>b.传参：<code>data += &quot;&amp;page_id=&quot;+pageId;</code></p>
<p>c.请求成功后跳转：</p>
<pre>
<code>if(pageId > 1){
    list.paginator.setPage(pageId).setPageCount(pageCount).printHtml('#J_Paging',2);
}
</code></pre>

]]></content>
    <summary type="html">
    <![CDATA[<p>需求描述：“异步获取列表的，如果点击列表的某一行进入详情页，在详情页处理完要返回列表页的时候，能否返回之前所在的分页？ ”</p>
<p>现有有两个可行的方案：1.使用 url参数 来记录之前的分页数；2.使用 HTML5 sessionStorage 记录之前的分页数；<]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello Hexo]]></title>
    <link href="http://snger.github.io/2013/12/31/hello-hexo/"/>
    <id>http://snger.github.io/2013/12/31/hello-hexo/</id>
    <published>2013-12-31T06:04:44.000Z</published>
    <updated>2014-02-27T05:06:47.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://zespia.tw/hexo" target="_blank" rel="external">Hexo</a>! Check <a href="http://zespia.tw/hexo/docs" target="_blank" rel="external">documentation</a> to learn how to use.</p>
<p>hexo是由Node.js驱动的一款快速、简单且功能强大的博客框架。它和jekyll相比，更快，更轻量。之前在Github上托管的博客就是使用jekyll搭建的，官方的Github Pages同样推荐使用它。但是jekyll目前有不少缺点，包括生成速度尤其是文章多了以后的生成速度让人无法接受，默认引擎Redcarpet解析Markdown时对中文支持不好，而且在Windows上使用问题多多，之前被严重坑过，虽然有解决的办法但是实在是耗费精力。<a href="http://yangjian.me/workspace/building-blog-with-hexo/" target="_blank" rel="external">via alimon</a>  </p>
<hr>
<h2 id="Create_a_New_Post">Create a New Post</h2><p><code>$ hexo new [layout] &lt;title&gt;</code></p>
<p>Hexo has 3 default layouts: post, page and draft.<table style="width:400px;"><tr><th>Layout</th><th>Destination</th></tr></table></p>
<p><tr><td>post (Default)</td><td>    source/_posts</td></tr></p>
<p><tr><td>page</td><td>    source</td></tr></p>
<p><tr><td>draft    </td><td>source/_drafts</td></tr></p>
<h3 id="Example">Example</h3><pre><code>$ hexo new "New Post"
# => The file will be created at source/_posts/new-post.md
$ hexo new page "New Page"
# => The file will be created at source/new-page/index.html
$ hexo new draft "New Draft"
# => The file will be created at source/_drafts/new-draft.md
</code></pre>

<h2 id="Code_Highlighting">Code Highlighting</h2><pre><code>&lt;pre&gt;&lt;code&gt;
code snippet
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<h2 id="Generating">Generating</h2><p>Generate static files with Hexo is quite easy and fast.</p>
<pre><code>$ hexo generate</code></pre>

<h3 id="Watch_for_File_Changes">Watch for File Changes</h3><p>Hexo can watch for file changes and regenerate files immediately.</p>
<pre><code>$ hexo generate --watch</code></pre>

<h3 id="Deploy_After_Generating">Deploy After Generating</h3><p>To deploy after generating, you can run one of the following commands. Both of them are equaled.</p>
<pre><code>$ hexo generate --deploy
$ hexo deploy --generate</code></pre>

<p>or</p>
<pre><code>hexo clean
hexo generate
hexo deploy
</code></pre>

<hr>
<h2 id="server">server</h2><p>To start server, run the following command:</p>
<pre><code>$ hexo server</code></pre>

<p>Your website will running at <code>http://localhost:4000</code></p>
<p>安装 hexo-livereload 插件后，文件修改会自动刷新页面；</p>
<h3 id="Static_Mode">Static Mode</h3><p>In static mode, only files in public folder will be served and file watching is disabled. You have to run hexo generate before starting the server. Usually used in production.</p>
<pre><code>$ hexo server -s</code></pre>

<h3 id="Drafts">Drafts</h3><p>In draft mode, drafts will be served as normal posts. You can preview your drafts on the server. All changes you made on drafts will be updated at once.</p>
<pre><code>$ hexo server -d</code></pre>

<h2 id="deployment">deployment</h2><p>To deploy your site with Hexo, you only need one command.</p>
<pre><code>$ hexo deploy</code></pre>

<hr>
<h3 id="markdown书写注意事项">markdown书写注意事项</h3><ol>
<li>现在的主题设置，每一段文字都需要前后有空格，才能自动形成段落，不然变成行内 span（左侧没有间距）；</li>
<li>编码放在 pre code 中，才会自动有高亮，为了避免代码高亮第一行为空，需要把第一行代码直接跟在code后面；<a href="http://zespia.tw/hexo/docs/tag-plugins.html#code-block" target="_blank" rel="external">hexo官方文档介绍的codeblock高亮方式</a> 样式没处理好；</li>
<li>table的宽度需要手动设定；</li>
<li>修改样式后，需要<code>hexo clean</code>，保证样式重新生成；</li>
<li>每次生成提交都会有大量的 git 记录，这个得想办法改进；</li>
<li>多标签使用 <code>[vim, git, vimdiff]</code> 的方式；</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[hexo是由Node.js驱动的一款快速、简单且功能强大的博客框架。]]>
    
    </summary>
    
      <category term="hexo" scheme="http://snger.github.io/tags/hexo/"/>
    
      <category term="博客相关" scheme="http://snger.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[别担忧，Enyo在这呢]]></title>
    <link href="http://snger.github.io/2012/05/26/never-fear-enyo-is-here/"/>
    <id>http://snger.github.io/2012/05/26/never-fear-enyo-is-here/</id>
    <published>2012-05-26T03:04:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文：<a href="http://www.webosnation.com/never-fear-enyo-here" target="_blank" rel="external">Never Fear, Enyo is Here</a><br>作者：<a href="http://www.webosnation.com/author/sharon-l-copeland" target="_blank" rel="external">SHARON L COPELAND</a><br>译者：<a href="https://twitter.com/#!/sjs_stef" target="_blank" rel="external">@sjs_stef</a><br>官方公告：<a href="http://blog.enyojs.com/post/23752115577/enyo-continues#notes" target="_blank" rel="external">Enyo Continues</a></p>
</blockquote>
<p><img src="http://cdn.webosnation.com/sites/webosnation.com/files/imagecache/large/postimages/380846/ENYO.jpg" alt="Enyo-img">  </p>
<p>过去36个小时里发生了如此多的变故足够让你我的脑袋炸开。悲摧是由HP宣布<a href="http://www.webosnation.com/hps-q2-2012-earnings-call-beginning-major-company-restructuring-27000-jobs-be-lost" target="_blank" rel="external">两年的时间内准备砍掉 27000 个职位</a>开始,然后，<a href="http://www.webosnation.com/enyo-team-rumored-have-quit-hp-moving-google-0" target="_blank" rel="external">Enyo 的核心团队正收拾包裹准备入住 Google</a>。是的，我们由衷的祝福你们找到这个奇妙的工作；但我们也非常的希望你们能自觉排成一队，我会为你们每个人准备一个祝福——以一记响亮的耳光。你们可知昨晚(2012-5-24)的10:30我们起来登录 twitter 就为了确认这个沉沦的消息。还没恍过神来就再遭遇这个星期的第二个坏消息。每一个 webOS 的粉丝就像被送上专门为坏孩子准备的桌子，品尝着一小块没有奶油的蛋糕。想着这对于我们的 webOS 手机意味着什么？ TouchPad 的遭遇又将如何？ webOS 的路在何方？也许我们可以从 Enyo团队发布的这个声明中舒缓下心神：  </p>
<blockquote>
<blockquote>
<p>Enyo 团队一直都是稳定而团结的。在听到我们的开发成员说道最近发布的版本中{译者注：<a href="https://github.com/enyojs/enyo-1.0" target="_blank" rel="external">enyo-1.0</a>}，性能已经大幅提高的好消息后，我们将以另一种方式发布新的版本{译者注：<a href="https://github.com/enyojs/enyo" target="_blank" rel="external">enyo</a>}。之后，我们把重心放在扩大 <a href="https://github.com/enyojs/onyx" target="_blank" rel="external">Onyx 部件集</a>上。大家应该知道我们团队已经邀请了合适的工程师，为团队的发展提供支持。  </p>
<p>毫无疑问，我们正在不断成长。正如我们于本月早些时候表示的，我们正在招聘——不仅仅是为了取代那些离开的工程师，更是为了今后的发展而壮大我们的团队。如果你想为 Enyo的成功贡献你的力量（并且得到报酬），请让我们知道。当然，我们非常欢迎大家在 <a href="https://github.com/enyojs/enyo/fork" target="_blank" rel="external">Github 上贡献代码</a>。  </p>
<p>我们的大门敞开者；如果您有任何问题，请在 <a href="http://forums.enyojs.com/" target="_blank" rel="external">Enyo 论坛</a>畅所欲言。我们一直在倾听，并且尽力帮助您解决问题。我们也将在下周参加在旧金山举行的  O’Reilly Fluent Conference 会议，在之后的一周我们也会出席在拉斯维加斯举办的 HP Discover ——我们非常期待能在那儿看见你。</p>
</blockquote>
</blockquote>
<p>既然得到了官方的确认信息，那么，就放下你的不安，按照原定的计划继续前行。Enyo 还在继续征途。<br><a id="more"></a></p>
<hr>
<p>P.S. 从前几年开始阅读 <a href="http://www.readwriteweb.com/" target="_blank" rel="external">ReadWriteWeb</a> 、<a href="http://www.techcrunch.com/" target="_blank" rel="external">TechCrunch</a>、<a href="http://www.engadget.com/" target="_blank" rel="external">Engadget</a> 时就想用翻译记录自己的阅读，却自找理由放弃。自从认真的开始接触开源的相关代码、项目后，由衷的喜欢这种态度。自勉。</p>
]]></content>
    <summary type="html">
    <![CDATA[Enyo 的核心团队正收拾包裹准备入住 Google]]>
    
    </summary>
    
      <category term="Linux" scheme="http://snger.github.io/tags/Linux/"/>
    
      <category term="翻译" scheme="http://snger.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="Linux" scheme="http://snger.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Ubuntu系统安装Magento]]></title>
    <link href="http://snger.github.io/2012/05/22/magentoinstallationinubuntu/"/>
    <id>http://snger.github.io/2012/05/22/magentoinstallationinubuntu/</id>
    <published>2012-05-21T17:54:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>Install Apache 2 WebServer<br>Code:<br><code>sudo apt-get install apache2</code></p>
<p>Install PHP5<br>Code:<br><code>sudo apt-get install php5</code>  </p>
<p>Install Mysql Server<br>Code:<br><code>sudo apt-get install mysql-server</code>  </p>
<p>Apart from default installation of LAMP we need to install php5-curl,from terminal issue the command<br>Code:<br><code>sudo apt-get install php5-curl</code>  </p>
<p>After this you need to enable mod_rewrite by issuing this command in the terminal(This is for Clean SEO URLS,you can skip this if you do not want)<br>Code:<br><code>sudo a2enmod rewrite</code>  </p>
<p>Install Phpmyadmin<br>code:<br><code>sudo apt-get install libapache2-mod-auth-mysql php5-mysql phpmyadmin</code>  </p>
<p>Finally restart the apache<br>Code:<br><code>/etc/init.d/apache2 restart</code></p>
<p>导入 magento-sample-data:</p>
<pre><code>mysql -u <span class="literal">root</span> -p
mysql&gt;create database magento;
mysql&gt;<span class="literal">use</span> magento
mysql&gt;<span class="literal">source</span> <span class="built_in">path</span>/data_file.sql
</code></pre><p>解压 magento 到 /var/www/ 中，或用命令复制：</p>
<pre><code>sudo cp -ri <span class="regexp">/downloads/m</span>agento <span class="regexp">/var/</span>www<span class="regexp">/</span>
</code></pre><p>启动 apache,打开浏览器访问 <a href="http://127.0.0.1/magento" target="_blank" rel="external">http://127.0.0.1/magento</a> 进入安装界面，若不改动设置，直接下一步……<br>若遇到错误提示：</p>
<blockquote>
<p>Path “/var/www/magento/app/etc” must be writable.<br>Path “/var/www/magento/var” must be writable.<br>Path “/var/www/magento/media” must be writable.  </p>
</blockquote>
<p>设置对应的文件权限：</p>
<pre><code>sudo chmod -R a+w <span class="regexp">/var/</span>www<span class="regexp">/magento/</span>app/etc
sudo chmod -R a+w <span class="regexp">/var/</span>www<span class="regexp">/magento/</span>media
sudo chmod -R a+w <span class="regexp">/var/</span>www<span class="regexp">/magento/</span>var
</code></pre><p>相关设置完成后，选择进入 网站前台 或是 管理后台。<a id="more"></a></p>
<hr>
<p>linux 小常识 — 设置 Ubuntu Root 用户：  </p>
<ol>
<li>打开终端，输入：<code>sudo passwd root</code> 然后按回车  </li>
<li>此时会提示你输入密码，在password:后输入你现在登录的用户的密码  </li>
<li>然后系统提示你输入新的UNIX密码<br>Enter new UNIX password:这里输入你想为root设置的密码，要输入两次  </li>
<li>此时系统会出现密码设置成功的提示，于是就可以用 <code>su rooot</code> 或者 <code>sudo -s -H</code> 切换到root权限</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[如何在Ubuntu系统安装Magento]]>
    
    </summary>
    
      <category term="Magento" scheme="http://snger.github.io/tags/Magento/"/>
    
      <category term="php" scheme="http://snger.github.io/tags/php/"/>
    
      <category term="php" scheme="http://snger.github.io/categories/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu使用K2pdfopt转换pdf]]></title>
    <link href="http://snger.github.io/2012/05/20/use-k2pdfopt-from-ubuntu/"/>
    <id>http://snger.github.io/2012/05/20/use-k2pdfopt-from-ubuntu/</id>
    <published>2012-05-20T06:36:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>“喜欢阅读电子书的朋友，特别是拥有Kindle等电纸书的朋友谈到扫描PDF(Scanned PDF)，大多是又爱又恨，”爱”在大量书籍、尤其是发行较早或外文原版的一些经典书籍，多由热心人士私下扫描成PDF发布在网络上，可以方便地下载到硬盘里(摆在那儿心里就踏实，看不看就另说了)；”恨”在扫描PDF(Scanned PDF)”骨头”太硬，不能像原生PDF(Native PDF)那样转换成各种格式。小小6寸屏，甚至3、4寸屏，纵然有满腔阅读热情，眼睛挤着挤着就吃不消了。由<a href="http://www.willus.com/author/" target="_blank" rel="external">Willus</a>开发的<a href="http://www.willus.com/k2pdfopt/" target="_blank" rel="external">免费PDF处理软件K2PDFopt</a>很好地解决了这个问题，可以让大家硬盘里堆积如山的扫描PDF真正重见天日。”—<a href="http://note1day.com/2011/12/k2pdfopt/" target="_blank" rel="external">用K2PDFopt重排版面，随手解救扫描PDF</a>  </p>
</blockquote>
<p>在 ubuntu 安装也十分简单，主要是这几个步骤：</p>
<ol>
<li>去 <a href="http://willus.com/k2pdfopt/download/" target="_blank" rel="external">K2pdfopt Download</a> 下载相应的版本</li>
<li>在文件所在的下载目录（一般是 Downloads ），右键所下载文件，把文件移动到主目录（家目录 Home）</li>
<li><p>Ctrl + Alt + T 进入命令行，依次输入如下代码：</p>
<pre><code>sudo mv k2pdfopt /usr/<span class="keyword">local</span>/bin
(输入你的密码)
chmod a+x /usr/<span class="keyword">local</span>/bin/k2pdfopt
<span class="keyword">mkdir</span> .<span class="keyword">local</span>/share/applications
<span class="keyword">cat</span> &gt; .<span class="keyword">local</span>/share/applications/k2pdfopt.desktop
[Desktop Entry]
Name=k2pdfopt
Exec=/usr/<span class="keyword">local</span>/bin/k2pdfopt %<span class="literal">f</span>
Terminal=true
<span class="keyword">Type</span>=Application
Categories=Application
(按下组合键 &lt;Ctrl-<span class="keyword">D</span>&gt;)
<span class="keyword">exit</span>
</code></pre></li>
<li><p>完成前三步后，你就可以在任意 .pdf 文件右击，在 “更多应用程序” 中找到 k2pdfopt, 选择后你就可以看到 k2pdfopt 的功能界面了。</p>
</li>
</ol>
<p>喜欢看图示的朋友可以看看 <a href="http://www.willus.com/k2pdfopt/help/ubuntu.shtml" target="_blank" rel="external">GETTING STARTED: UBUNTU DESKTOP 11.1</a><br>更多技巧，可以看看 <a href="http://note1day.com/2011/12/k2pdfopt-faq/" target="_blank" rel="external">K2pdfopt使用常见问题</a></p>
]]></content>
    <summary type="html">
    <![CDATA[用K2PDFopt重排版面，随手解救扫描PDF]]>
    
    </summary>
    
      <category term="工具" scheme="http://snger.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="工具" scheme="http://snger.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu无响应的处理方法]]></title>
    <link href="http://snger.github.io/2012/05/18/dealing-with-non-response-of-ubuntu/"/>
    <id>http://snger.github.io/2012/05/18/dealing-with-non-response-of-ubuntu/</id>
    <published>2012-05-18T14:10:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>在更新了Ubuntu12.04后，经常遇到电脑无响应的状态，一般的症状是：鼠标可以移动，键盘却无法操作，点击笔记本的音量控制键，指示灯有变化，音量却没变化，很是无奈。<br>症状一般发生在使用 Flash 、使用 Chrome 浏览一些页面没优化好的网页、Chrome 开15+网页的时候。<br>尝试过使用 Gnome Classic 假死的情况基本上不出现，不过后来 Gnome 和 Unity 有些冲突，又切回 Unity，于是这状况又出现了。<br>搜索了下，发现一些人更新显卡驱动后，情况好转。关于显卡安装，<a href="http://forum.ubuntu.org.cn/viewtopic.php?t=140531" target="_blank" rel="external">请点这里</a><br>另外，<a href="http://fgqiblog.appspot.com/?p=43001" target="_blank" rel="external">这篇文章介绍了Ubuntu死机、无响应的处理方法</a>,比较推荐的方法是：</p>
<ol>
<li>按Ctrl-Alt-(F1～F6)，进入控制台进行相关的操作</li>
<li>用户名和密码登录，然后运行 top 命令，查看正在运行的程序，记下占 CPU 高的程序的 PID </li>
<li>输入 kill + PID ,结束相应的进程</li>
<li>Alt + F7 切换回图形界面</li>
</ol>
<p>5月20更新：发现 kill 相关进程后，切换回图形界面还是呈现卡死状态，又不想重启电脑，于是使用<br><code>sudo skill -KILL -u 图形界面登录的用户名</code><br>去重启图形界面。</p>
]]></content>
    <summary type="html">
    <![CDATA[Ubuntu无响应的处理方法]]>
    
    </summary>
    
      <category term="Linux" scheme="http://snger.github.io/tags/Linux/"/>
    
      <category term="Linux" scheme="http://snger.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[认清实际]]></title>
    <link href="http://snger.github.io/2012/05/18/theessenceoftheactual/"/>
    <id>http://snger.github.io/2012/05/18/theessenceoftheactual/</id>
    <published>2012-05-18T12:46:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>继续话题：<a href="http://developer.51cto.com/art/201202/315330.htm" target="_blank" rel="external">计算机课程之1：认清实际</a>.</p>
<h3 id="1-_列举10个Python_Web框架">1. 列举10个Python Web框架</h3><p>关于 Python web 框架，网络上流传比较广的版本是来自<a href="http://feilong.me" target="_blank" rel="external">飞龙博客</a>的<a href="http://feilong.me/2011/01/talk-about-python-web-framework" target="_blank" rel="external">浅谈Python web框架</a>,其文主要介绍了 <a href="http://www.djangoproject.com/" target="_blank" rel="external">Django</a>、<a href="http://www.pylonshq.com/" target="_blank" rel="external">Pylons</a>、<a href="http://www.tornadoweb.org/" target="_blank" rel="external">Tornado</a>、<a href="http://bottle.paws.de/" target="_blank" rel="external">Bottle</a>、<a href="http://www.quixote.ca/" target="_blank" rel="external">Quixote</a>.<a href="http://wiki.python.org/moin/WebFrameworks" target="_blank" rel="external">点击这里-查看更多</a></p>
<h3 id="2-_Python有多少种不同的解释器？">2. Python有多少种不同的解释器？</h3><p>在 Wikipedia 中的 <a href="http://zh.wikipedia.org/wiki/Category:Python%E8%A7%A3%E9%87%8A%E5%99%A8" target="_blank" rel="external">Python解释器 分类</a>中，主要列出三种：</p>
<ul>
<li><p><a href="http://zh.wikipedia.org/wiki/CPython" target="_blank" rel="external">CPython</a></p>
<blockquote>
<p>CPython是用C语言实现的Python解释器，也是官方的并且是最广泛使用的Python解释器。除了CPython以外，还有用JAVA实现的Jython和用.NET实现的IronPython，使Python方便地和JAVA程序、.NET程序集成。</p>
</blockquote>
</li>
<li><p><a href="http://zh.wikipedia.org/wiki/IronPython" target="_blank" rel="external">IronPython</a></p>
<blockquote>
<p>IronPython 是一种在 .NET 和 Mono 上实现的 Python 语言，由 Jim Hugunin（同时也是 Jython 创造者）所创造。在 2007 年，开发者决定改写构架，使用动态类型系统以让更多脚本语言能很容易地移植到.NET Framework上。</p>
</blockquote>
</li>
<li><p><a href="http://zh.wikipedia.org/wiki/Jython" target="_blank" rel="external">Jython</a></p>
<blockquote>
<p>Jython，（原JPython），是一个用JAVA语言写的Python解释器。Jython程序可以和Java无缝集成。除了一些标准模块，Jython使用Java的模块。Jython几乎拥有标准的Python中不依赖于C语言的全部模块。</p>
</blockquote>
</li>
<li><p><a href="http://zh.wikipedia.org/wiki/PyPy" target="_blank" rel="external">PyPy</a></p>
<blockquote>
<p>PyPy是用Python实现的Python解释器。PyPy比CPython是更加灵活，易于使用和试验，以制定具体的功能在不同情况的实现方法，可以很容易实施。</p>
</blockquote>
</li>
</ul>
<h3 id="3-_Perl_跟_Python_有什么不同？">3. Perl 跟 Python 有什么不同？</h3><p>两者设计思想的不同：<br>Perl—<a href="http://en.wikipedia.org/wiki/There_is_more_than_one_way_to_do_it" target="_blank" rel="external">“there is more than one way to do it”</a><br>Python—<a href="http://www.python.org/dev/peps/pep-0020/" target="_blank" rel="external">“there should be one—and preferably only one—obvious way to do it”</a><br>推荐阅读<a href="http://www.ibm.com/developerworks/cn/linux/l-cn-perl2python/index.html" target="_blank" rel="external">Perl 与 Python 之间的一些异同</a>,文章从 1.起源与特点 2.基本数据类型 3.控制结构 4.函数 5.包与模块 6.面向对象 7.正则表达式 8.线程 方面进行了比较。</p>
]]></content>
    <summary type="html">
    <![CDATA[继续话题：[计算机课程之1：认清实际]]]>
    
    </summary>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[认清计算机（系课程）本质]]></title>
    <link href="http://snger.github.io/2012/05/17/the-essence-of-the-computer/"/>
    <id>http://snger.github.io/2012/05/17/the-essence-of-the-computer/</id>
    <published>2012-05-17T12:52:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="一个有趣的系列，宅男程序员给老婆的计算机课程,起始篇认清本质中说到几个问题,老实说真不清楚，于是GOOGLE，列举些目前的了解，并将持续更新，用作记录。">一个有趣的系列，<a href="http://developer.51cto.com/art/201203/321936.htm" target="_blank" rel="external"><em>宅男程序员给老婆的计算机课程</em></a>,起始篇<a href="http://developer.51cto.com/art/201202/314296.htm" target="_blank" rel="external">认清本质</a>中说到几个问题,老实说真不清楚，于是GOOGLE，列举些目前的了解，并将持续更新，用作记录。</h2><h3 id="1-_用500字讲述什么是Programming_Methodology?">1. 用500字讲述什么是Programming Methodology?</h3><p>2012.5.17：比较常听到的编程的方法：</p>
<ul>
<li><p><a href="http://en.wikipedia.org/wiki/Procedural_programming" target="_blank" rel="external">Procedural programming</a>(<a href="http://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BA%8F%E7%B7%A8%E7%A8%8B" target="_blank" rel="external">程序编程，又称程序式编程、程序化编程、过程化编程,俗称面向过程</a>),面向对象编程的思维就像日程安排或是作业流程图，主体流程是步进式的。</p>
</li>
<li><p><a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank" rel="external">Object-oriented programming</a>(<a href="http://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="external">面向对象程序设计</a>)；  </p>
<blockquote>
<p><a href="http://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="external">面向对象程序设计</a>:指一种程序设计范型，同时也是一种程序开发的方法。它将对象作为程序的基本单元，将程序和数据封装其中，以提高软件的重用性、灵活性和扩展性。<br>两者对比：<br>面向对象程序设计可以被视作一种在程序中包含各种独立而又互相调用的单位和对象的思想，这与传统的思想刚好相反：传统的程序设计主张将程序看作一系列函数的集合，或者直接就是一系列对电脑下达的指令。面向对象程序设计中的每一个对象都应该能够接受数据、处理数据并将数据传达给其它对象，因此它们都可以被看作一个小型的“机器”，或者说是负有责任的角色。  </p>
</blockquote>
</li>
<li><p><a href="">Functional programming</a>(<a href="http://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B8%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80" target="_blank" rel="external">函数式编程</a>);  </p>
<blockquote>
<p>它将电脑运算视为数学上的函数计算，并且避免状态以及可变资料。函数编程语言最重要的基础是 λ 演算（lambda calculus）。而且λ演算的函数可以接受函数当作输入（引数）和输出（传出值）。<br>和指令式编程相比，函数式编程强调函数的计算比指令的执行重要。<br>和程序编程相比，函数式编程里，函数的计算可随时调用。  </p>
</blockquote>
</li>
<li><p>其他：去<a href="http://en.wikipedia.org/wiki/Programming_paradigm" target="_blank" rel="external">Programming paradigm</a>(<a href="http://zh.wikipedia.org/wiki/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%9E%8B" target="_blank" rel="external">编程范型</a>)查看更多。  </p>
</li>
</ul>
<hr>
<h3 id="2-_列举10种Data_Structure-">2. 列举10种Data Structure.</h3><ul>
<li><a href="http://en.wikipedia.org/wiki/Array_data_structure" target="_blank" rel="external">array data structure</a></li>
<li><a href="http://en.wikipedia.org/wiki/Record_(computer_science" target="_blank" rel="external">Record</a></li>
<li><a href="http://en.wikipedia.org/wiki/Hash_table" target="_blank" rel="external">hash</a></li>
<li><a href="http://en.wikipedia.org/wiki/Union_(computer_science" target="_blank" rel="external">Union</a></li>
<li><a href="http://en.wikipedia.org/wiki/Tagged_union" target="_blank" rel="external">tagged union</a></li>
<li><a href="http://en.wikipedia.org/wiki/Set_(abstract_data_type" target="_blank" rel="external">set</a></li>
<li><a href="http://en.wikipedia.org/wiki/Object_(computer_science" target="_blank" rel="external">object</a></li>
<li>常规说法：阵列 (Array)、堆栈 (Stack)、队列 (Queue)、链表 (Linked List)、树 (Tree)、图 (Graph)、堆 (Heap)、杂凑 (Hash)。<a href="http://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" target="_blank" rel="external">来源</a><a id="more"></a></li>
</ul>
<hr>
<h3 id="3-_列举10种Algorithm-">3. 列举10种Algorithm.</h3><p>Wikipedia:<a href="http://en.wikipedia.org/wiki/Algorithm" target="_blank" rel="external">Algorithm</a>、<a href="http://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95" target="_blank" rel="external">算法</a>;<br><a href="http://www.douban.com/group/topic/12416781/" target="_blank" rel="external">经典算法集合</a>:  </p>
<ul>
<li>排序算法</li>
<li>冒泡排序法</li>
<li>起泡法</li>
<li>鸡尾酒排序</li>
<li>桶排序</li>
<li>计数排序</li>
<li>归并排序</li>
<li>排序二叉树</li>
<li>鸽巢排序</li>
<li>基数排序  </li>
</ul>
<p>算法博客推荐：<a href="http://blog.csdn.net/v_JULY_v" target="_blank" rel="external">结构之法 算法之道</a></p>
]]></content>
    <summary type="html">
    <![CDATA[一个有趣的系列，宅男程序员给老婆的计算机课程,起始篇 认清本质 中说到几个问题,老实说真不清楚，于是GOOGLE，列举些目前的了解，并将持续更新，用作记录。]]>
    
    </summary>
    
      <category term="读书笔记" scheme="http://snger.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Octopress再上线]]></title>
    <link href="http://snger.github.io/2012/04/30/comeback/"/>
    <id>http://snger.github.io/2012/04/30/comeback/</id>
    <published>2012-04-30T09:39:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="自上次升级Octopress后，就出现一些莫名其妙的问题，导致不能发表文章，趁假期有空，赶紧研究下。">  自上次升级Octopress后，就出现一些莫名其妙的问题，导致不能发表文章，趁假期有空，赶紧研究下。</h2><ul>
<li>第一次出错时，提示的代码是：<code>&#39;require&#39;: libffi.so.5: cannot open shared object file: No such file or directory</code> 于是根据这个关键字在google中搜索，找到<a href="http://xwsoul.com/posts/345" target="_blank" rel="external">这篇网志</a>,从而得知是因为找不到动态库文件，于是在终端中输入 <code>locate libffi.so.6</code> 定位到文件所在目录，再进入 libffi.so.6 所在目录, 用 <code>sudo ln -s libffi.so.6 libffi.so.5</code> 做个文件链接，于是第一个问题解决了。  </li>
<li>再次 <code>rake generate</code> 时，居然又出现 <code>.rvm/gems/ruby-1.9.2-p290/gems/rubypython-0.5.1/lib/rubypython/rubypyproxy.rb:198:in `method_missing&#39;: ClassNotFound: no lexer for alias &#39;$(&quot;div.box&quot;).on(&quot;click&quot;,&#39; found (RubyPython::PythonError)</code> 的错误（看着像Jquery的语法)，于是继续 Google,做了一些无用的尝试后，看到 <a href="https://github.com/imathis/octopress/issues/440" target="_blank" rel="external">Octopress git 的官方 Issue页</a>,看到这句<blockquote>
<p>friends, solved the problem. was that a post had the word out instead of ruby rails.Python and could not read it.<br>忽然想到或许是上一篇网志，出现语法错误，于是把那篇网志暂时移出 _post 目录后再发布，居然可以了……  </p>
</blockquote>
</li>
</ul>
<hr>
<p>另：  </p>
<ul>
<li>Ubuntu12.04还不错，发现唯一的问题是chrome经常性的崩溃，目前先用着 firefox。  </li>
<li>Ubuntu12.04的 gidit 的 markdown 语法支持得很完善，写网志直观了很多，赞呐。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[自上次升级Octopress后，就出现一些莫名其妙的问题，导致不能发表文章，趁假期有空，赶紧研究下。]]>
    
    </summary>
    
      <category term="Octopress" scheme="http://snger.github.io/tags/Octopress/"/>
    
      <category term="博客相关" scheme="http://snger.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Test My jQuery Skill: Solutions]]></title>
    <link href="http://snger.github.io/2012/03/04/test-my-jquery-skill-solutions/"/>
    <id>http://snger.github.io/2012/03/04/test-my-jquery-skill-solutions/</id>
    <published>2012-03-04T02:24:00.000Z</published>
    <updated>2015-07-09T03:46:25.000Z</updated>
    <content type="html"><![CDATA[<p>See it in my other blog : <a href="http://thesamesummer.blogspot.com/2012/02/test-my-jquery-skills-solutions.html" target="_blank" rel="external">Test My jQuery Skills: Solutions | The same summer.</a></p>
<h2 id="You_can_text_it_now_:_Tuts+_Premium_Course:_30_Days_to_Learn_jQuery_-_Quiz_#1:_The_Basics">You can text it now : <a href="http://tutsplus.com/lesson/jquery-30-days-quiz-1/" target="_blank" rel="external">Tuts+ Premium Course: 30 Days to Learn jQuery - Quiz #1: The Basics</a></h2><h3 id="1-In_addition_to_jQuery(),_we_can_also_use_a_shorter_reference_to_the_jQuery_function-_What_is_it?">1.In addition to jQuery(), we can also use a shorter reference to the jQuery function. What is it?</h3><p><code>jQ  $  $$  j</code></p>
<h4 id="Additional_Notes">Additional Notes</h4><p>If you review the jQuery source (something you should always do), you will find that jQuery and $ can both be used interchangably. The former is most often used in situations when the $ can clash with existing code or libraries.</p>
<h3 id="2-True_or_False:_the_jQuery_function_accepts_a_CSS_selector,_which_is_used_to_query_the_DOM_for_the_applicable_elements-">2.True or False: the jQuery function accepts a CSS selector, which is used to query the DOM for the applicable elements.</h3><p> <code>True False</code></p>
<h4 id="Additional_Notes-1">Additional Notes</h4><p>Remember, you are not limited to mere CSS selectors; you can also pass DOM nodes, and even create elements. For instance, the following code will create a div and append it to the body: $(“<br>Hi there<br>“).appendTo(“body”);</p>
<h3 id="3-Query_the_DOM_for_the_div_with_an_id_of_container_and_store_a_reference_to_it_(“cache_it”)_in_a_variable,_called_container-">3.Query the DOM for the div with an id of container and store a reference to it (“cache it”) in a variable, called container.</h3><p><code>var container = $(&quot;#container&quot;);</code></p>
<h4 id="Additional_Notes-2">Additional Notes</h4><p>Storing the results of a particular query in a variable is often referred to as “caching.” This way, we keep from having to dive into the DOM pool over and over to retrieve the same set of elements.</p>
<h3 id="4-Query_the_DOM_for_the_ul,_and_add_a_class_of_alternate-">4.Query the DOM for the ul, and add a class of alternate.</h3><p><code>$(&quot;ul&quot;).addClass(&quot;alternate&quot;);</code></p>
<h4 id="Additional_Notes-3">Additional Notes</h4><p>Technically, this code will add a class of alternate to all unordered lists in the DOM. If you need to be more specific, you can use an id, or a method like eq() or first() to fine-tune the results.</p>
<h3 id="5-Which_of_the_following_is_not_a_valid_jQuery_method?">5.Which of the following is not a valid jQuery method?</h3><p><code>addClass  next  prev  grandparents</code></p>
<h4 id="Additional_Notes-4">Additional Notes</h4><p>Don’t take the “parent-child” relationship idea too far. grandparents or grandchildren do not exist! Instead, you’d use parents(), closest(), and find().<a id="more"></a></p>
<h3 id="6-True_or_False:_We_use_$(document)-ready(fn);_to_ensure_that_the_DOM_has_fully_loaded_before_proceeding-">6.True or False: We use $(document).ready(fn); to ensure that the DOM has fully loaded before proceeding.</h3><p> <code>True False</code></p>
<h4 id="Additional_Notes-5">Additional Notes</h4><p>Alternatively, the same result can be achieved by passing an anonymous function to jQuery.</p>
<h3 id="7-Use_jQuery’s_text_method_to_update_the_element-_Change_it_to_“Updated-”">7.Use jQuery’s text method to update the element. Change it to “Updated.”</h3><p><code>$(&quot;h1&quot;).text(&quot;Updated&quot;);</code></p>
<h4 id="Additional_Notes-6">Additional Notes</h4><p>Should you need to insert actual HTML, you’d instead use the html method.</p>
<h3 id="8-Which_method_will_return_the_nearest_element,_moving_up_the_DOM_chain,_that_matches_the_provided_selector?">8.Which method will return the nearest element, moving up the DOM chain, that matches the provided selector?</h3><p><code>ancestors()  closest()  nearest()  children()</code></p>
<h4 id="Additional_Notes-7">Additional Notes</h4><p>closest will retrieve the first element that matches a provided selector. It begins at the current element, and works up through the DOM tree.</p>
<h3 id="9-The_box_(or_div)_below_has_a_class_of_box-_Listen_for_when_this_box_is_clicked-_When_it_is,_remove_the_box_class-_Hint:_you_will_want_to_use_jQuery’son()_method-">9.The box (or div) below has a class of box. Listen for when this box is clicked. When it is, remove the box class. Hint: you will want to use jQuery’son() method.</h3><pre><code>$(<span class="string">"div.box"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
       $(<span class="keyword">this</span>).removeClass(<span class="string">"box"</span>);
});
</code></pre><h4 id="Additional_Notes-8">Additional Notes</h4><p>In addition to on(), jQuery also provides a handful of “shortcut” methods, such as click() and hover().</p>
<h3 id="10-Imagine_that_you’ve_selected_one_list_item,_and_now_need_to_select_all_other_list_items_on_that_same_level-_Which_method_should_use_to_accomplish_this?">10.Imagine that you’ve selected one list item, and now need to select all other list items on that same level. Which method should use to accomplish this?</h3><h4 id="Additional_Notes-9">Additional Notes</h4><p>Additionally, a selector can be passed to the siblings method. This allows you to filter the matches.</p>
<h3 id="11-Select_the_fourth_list_item_below,_and_use_the_css_method_to_set_its_background_color_to_‘gray’-">11.Select the fourth list item below, and use the css method to set its background color to ‘gray’.</h3><p><code>$(&#39;li:nth-child(4)&#39;).css(&#39;background&#39;, &#39;gray&#39;);</code></p>
<h4 id="Additional_Notes-10">Additional Notes</h4><p>There were lots of ways to handle this question. In addition to the provided solution, you could also use the eq()method: $(“li”).eq(3).css(“backgroundColor”, “gray”);. jQuery also allows you to use eq as a custom selectors: $(“li:eq(3)”);.</p>
<h3 id="12-True_or_False:_jQuery_is_just_JavaScript-">12.True or False: jQuery is just JavaScript.</h3><p> <code>True False</code></p>
<h4 id="Additional_Notes-11">Additional Notes</h4><p>Sometimes, it’s easy to think of JavaScript and jQuery as entirely separate languages, but they aren’t! At its core, jQuery is just JavaScript.</p>
]]></content>
    <summary type="html">
    <![CDATA[Test My jQuery Skill - Solutions]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一些在github中开源的淘宝项目]]></title>
    <link href="http://snger.github.io/2011/12/27/taobao-pages/"/>
    <id>http://snger.github.io/2011/12/27/taobao-pages/</id>
    <published>2011-12-27T12:54:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>因为现在的工作与淘宝相关，于是在github中搜索是否有淘宝相关的项目，页面见<a href="https://github.com/search?langOverride=&amp;q=taobao&amp;repo=&amp;start_value=2&amp;type=Repositories" target="_blank" rel="external">“Search Taobao in Github.com”</a><br>其中最值得注意的自然是由淘宝前端攻城师们发起创建的一个开源 JS 类库——KISSY。<a href="http://docs.kissyui.com/" target="_blank" rel="external">KISSY项目主页</a>、<a href="https://github.com/kissyteam" target="_blank" rel="external">KISSY在github的托管页面</a>。<br>另一個值得關注的項目是由支付宝前端样式解决方案小组的项目——<a href="http://aliceui.com/" target="_blank" rel="external">Alice</a>,<a href="https://github.com/sofish/Alice" target="_blank" rel="external">Github託管頁面</a>.<br>在淘寶店鋪中經常使用的<a href="http://www.linezing.com/" target="_blank" rel="external">“淘寶量子統計”</a>據說<a href="http://chenxiaoyu.org/2011/10/30/nginx-modules.html" target="_blank" rel="external">“完全是lua扩展“</a>,我還沒研究，有興趣的可以看看。<br><a href="http://cubee.github.com/doc/" target="_blank" rel="external">cubee</a>是一套整洁实用的UI控件库,在淘寶中使用比較多，現在已經停止維護，相關的項目是<a href="https://github.com/taobao-wd/taobao-wd.github.com" target="_blank" rel="external">淘宝北京前端Demo Gallery</a>，可以跟進看看。<br>一個已放棄的淘寶數據採集項目——<a href="https://github.com/mangege/taobaotop" target="_blank" rel="external">淘宝top数据采集</a>.  </p>
<h2 id="其他一些規範的開源代碼：Taobaoshop-Simple_app_to_demo_the_Taobao_plugin、淘宝快手书商应用、tbNinja-taobao_seller_service、Taobao_Miaosha、Taobao_Zhekou。">其他一些規範的開源代碼：<a href="https://github.com/ForrestShi/taobaoshop" target="_blank" rel="external">Taobaoshop-Simple app to demo the Taobao plugin</a>、<a href="https://github.com/chengdh/taobao-book-rails2" target="_blank" rel="external">淘宝快手书商应用</a>、<a href="https://github.com/moxing/tbNinja/tree/master/src" target="_blank" rel="external">tbNinja-taobao seller service</a>、<a href="https://github.com/gckjdev/Taobao_Miaosha" target="_blank" rel="external">Taobao_Miaosha</a>、<a href="https://github.com/gckjdev/Taobao_Zhekou" target="_blank" rel="external">Taobao_Zhekou</a>。  </h2><p>最後，當然是我的開源項目啦，<a href="https://github.com/Snger/TaobaoPages" target="_blank" rel="external">TaobaoPages</a>。<br>一直覺得開源使互聯網世界更加美好。</p>
]]></content>
    <summary type="html">
    <![CDATA[因为现在的工作与淘宝相关，于是在github中搜索是否有淘宝相关的项目]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[beginners]]></title>
    <link href="http://snger.github.io/2011/12/09/beginners/"/>
    <id>http://snger.github.io/2011/12/09/beginners/</id>
    <published>2011-12-09T02:21:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>昨天看到<a href="https://twitter.com/#!/roamlog" target="_blank" rel="external">@roamlog</a>的一篇文章，描述了部分计算机领域学习者的心态和轨迹，转载过来用以自醒。</p>
<hr>
<p><a href="http://readful.com/post/13920193592/rails-is-not-for-beginners" target="_blank" rel="external">关于《Rails Is Not For Beginners》，我有话要说</a></p>
<p>阅读此文前，请先阅读我之前写的<a href="http://readful.com/post/13916777418/rails-is-not-for-beginners" target="_blank" rel="external">《Rails Is Not For Beginners》</a>，当然最好也把文章里的那些链接也点一遍，把评论啥的也看一遍。</p>
<p>我非常同意 DHH 的观点，learnability（易学性） 和 usability（可用性） 是个两难的问题，Rails 优先考虑 usability 是完全正确的，至于 learnability 我个人觉得 rails 已经做得很不错了。</p>
<p>拿 Sinatra 和 Rails 比其实是件蛮搞笑的事情，Sinatra 充其量就是一个高级一点的玩具，拿来写个 Demo 有时都可能不够用，稍微复杂一点，就办不到了，或需要付出相当的时间和精力去搞定。</p>
<p>针对国内环境，针对「Rails Is Not For Beginners」这个话题，我倒想展开来说几句。</p>
<p>首先，Rails 对于 Windows 的支持，可以说是比较差的，但因为国内相当部分人都是使用 Windows 操作系统，就这一点就足够说 Rails Is Not For Beginners。<a id="more"></a></p>
<p>当然了这几年，情况要好一些，有 <a href="http://railsinstaller.org/" target="_blank" rel="external">RailsInstaller</a> 等一些一键安装包，但是还是会碰到很多莫名其妙的问题，还有就是有很多 gem 是天然不支持 windows 的，不管你怎么折腾，你可能还是无法安装成功。</p>
<p>可以说，在国内，有很多对 rails 感兴趣的，就是死在搭建环境上。所以我建议要学 Rails 还是使用 Linux 或 Mac OSX 吧，会少很多很多麻烦，我是在 Mac 下开始折腾 Rails 的，我可以说什么乱七八糟的问题都没碰到，环境搭建就几条命令搞定，分分钟的事情。</p>
<p>补充说明为什么推荐 Mac：</p>
<blockquote>
<p>1、Rails 的作者们都是使用的 Mac，所以 Rails 天然对 Mac 最友好，问题也最少，比如 Rails 的母公司 37signals 发布的名叫 pow 的 web 服务器就是 Mac Only 的。</p>
<p>2、Mac OSX 自带 ruby 环境，搭建 Rails 环境可能就一条命令 gem install rails 就搞定了，当然这是比较理想化了，因为为了管理更方便、使用更方便等，会安装更多的东西，比如 RVM。</p>
<p>3、Textmate，这是一个 Mac Only 的文本编辑器，曾经有人因为它而买 Mac，可见它的魅力了，要说明的是 Rails 的作者们一直在用它，简直可以说 rails 就是用它写出来的。而我个人的使用感受也是很好，用它来写 rails 真的很方便，根本不需要什么 IDE，另外其实有很多克隆 Textmate 的编辑器，其中完成度最好的是 Sublime text 2，我强烈推荐，因为它有 Windows 和 Linux 版，当然也有 Mac 版。</p>
<p>4、Mac 电脑及 Mac OSX 本身的优势，这个我就不多说了，网上到处都是相关文章，简单讲就是 Mac OSX 对程序员来说用户体验很友好，有终端（很重要），有各种各样又好看又好用的软件。</p>
</blockquote>
<p>有人可能看到这会觉得像软文，在做广告，随便你怎么想吧，谁用谁知道，我接着说。</p>
<p>其次，因为墙的原因，导致很多人搭建环境失败，这个我在之前写的<a href="http://readful.com/post/12322300571/0-ruby-on-rails" target="_blank" rel="external">《如何从 0 开始学 ruby on rails （漫步版）》</a>一文中有见，在最后一部分，不再赘述。</p>
<p>最后，也是我最想说的，是 rails 新手们的学习态度、方法和方式的问题（注：以下的内容可能过于主观和情绪化，请勿对号入座）。</p>
<p>我想很多人对 Rails 感兴趣都是因为官方那个 15 分钟写就一个博客程序的宣传广告吧，当然可能看的是中文版 :)，这则宣传广告，只是说明了一点，Rails 的开发效率非常高。但在国人眼里，可能加入了「简单」这一层意思，但 Rails 真的没那么简单，想弄好它，要学的东西可多了。</p>
<p>国人是怎么学 Rails 的呢，可能是这样的。</p>
<p>国人看到篇介绍 Rails 的文章，觉得好炫啊，15 分钟呢，立马动手开始搭建环境，而且肯定是看的中文资料，而不是去官方网站。同时加入某个 QQ 群，因为用的是 Windows，同时也没去找相关文章看，就算找了也因为种种原因，搭建环境肯定失败了，然后在 QQ 群里面问，经过无数人的帮助，终于搞定了在 Windows 下搭建环境的问题。</p>
<p>好，环境搭建好了，开始问大家都用什么工具，用哪个 IDE 好，然后群里各抒己见，火爆非常。他们肯定会选 IDE，因为他们说习惯了，不过不幸的事情还是发生了，用 IDE 还是一路艰辛，各种问题，比如环境变量啊，各种报错啊，再次在 QQ 群里问，再次在大家的帮助下把问题解决了。</p>
<p>这下终于可以开始写了，然后照着一篇中文资料想把官方那个 15 分钟写就一个博客程序的例子写出来，再次出现一大堆问题，因为他看的资料过期了，现在已经是 Rails 3.1.3 了，他不小心安装的也是这个，但那中文资料还是 2.x 的甚至 1.x，各种不兼容，然后他还是跑到群里面问，然后还是在大家的帮助下。。。</p>
<p>跌跌撞撞，磕磕碰碰，他们从来不去看官方的资料，因为那是英文的，他们看不懂，他们说自己英语差。他们知道自己英语差，但他们从来不打算去把英语提高，他们中的相当部分人甚至觉得英语对于程序员来说不重要。</p>
<p>他们中相当部分人没有意识说去找本书好好看，侥幸有人告诉他 ruby 看哪本书，rails 看哪本书，他们的第一句话可能是哪有下载，你有吗？传给我。对，他们从来没有版权意识，不喜欢买书，因为贵。不幸的是，因为 rails 的不向下兼容及快速更新步伐，rails 的书永远跟不上，中文书更是落后 1 到 2 年，和他好不容易从网上下载下来效果可以闪瞎眼睛的中文书电子书比，最新的 rails 已经千差万别了，这下再度碰了一鼻子灰。</p>
<p>他们这些人基础很差，英语不行，软件工程、操作系统原理、编译原理、数据库原理、数据结构与算法，通通不懂，但他们还是选择了程序员这条路，一开始，这些你可以不懂，但慢慢的你一定要去补起来，不然这条路会走得很辛苦，但很多人没这个意识。但坦白讲，就这些通通不懂的人有不少在中国的大小公司里还混得不错，真是奇葩，这也算是中国特色了。</p>
<p>他们在网上看到有人说学 rails 不用先学 ruby，但他们不知道，这个话是“有人”对那些有真正的学习能力，有举一反三、融会贯通能力的人说的。他们并不具备这些能力，这下更是磕磕碰碰，跌跌撞撞了。</p>
<p>我不知道为什么，他们在学一个新东西的时候，首先找的不是它的官方网站？我不知道为什么，他们在学一个新东西的时候，不知道看什么书。我不知道为什么，他们为什么连 Google 都不会用。我也不知道为什么，他们遇到问题从来不自己先搜索，而是张口就问。</p>
<p>他们不知道未来在哪里，他们很迷茫，不知道路怎么走。他们不知道学什么，他们不知道怎么学。他们只会问 Java 和 C# 比起来哪个更有前途。</p>
<p>所以，关于「Rails Is Not For Beginners」这个结论，对很多中国人来说是完全正确的，因为他们就是 beginners，他们甚至连 beginners 都不是。他们有更重要的问题需要解决，绝对不是单纯某种语言怎么学，是否适合 beginners 的问题。</p>
<p>这是家庭教育的原因，还是学校教育的原因，或是他们自身的原因，我不知道，也许兼而有之吧。</p>
<p>就说这么多吧，再次声明这是一篇情绪化比较重的文章，请勿对号入座。但如果你对号入座了，因而感觉受到伤害到了，我表示很无奈。</p>
]]></content>
    <summary type="html">
    <![CDATA[昨天看到 @roamlog 的一篇文章，描述了部分计算机领域学习者的心态和轨迹，转载过来用以自醒。]]>
    
    </summary>
    
      <category term="达者为师" scheme="http://snger.github.io/tags/%E8%BE%BE%E8%80%85%E4%B8%BA%E5%B8%88/"/>
    
      <category term="达者为师" scheme="http://snger.github.io/categories/%E8%BE%BE%E8%80%85%E4%B8%BA%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[XML TEST]]></title>
    <link href="http://snger.github.io/2011/12/06/xml-test/"/>
    <id>http://snger.github.io/2011/12/06/xml-test/</id>
    <published>2011-12-06T09:16:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>XML 测验  结果：18/20<br>如果您有兴趣参与测试，可以点<a href="http://www.w3school.com.cn/quiz/quiz.asp?quiz=xml" target="_blank" rel="external">这里</a><br>您的回答：<br>1.XML指的是？<br>您的回答：eXtensible Markup Language<br>2.XML对数据进行描述的方式是？<br>您的回答：XML使用DTD来描述数据<br>3.XML的目标是取代HTML<br>您的回答：错误<br>4.下列定义XML版本的声明中语法正确的是？<br>您的回答：<code>&lt;?xml version=&quot;1.0&quot;?&gt;</code><br>5.DTD指的是？<a id="more"></a><br>您的回答：Document Type Definition<br>6.这是一个“形式良好”的文档吗？  </p>
<pre><code><span class="pi">&lt;?xml version="1.0"?&gt;</span>
<span class="tag">&lt;<span class="title">note</span>&gt;</span>
<span class="tag">&lt;<span class="title">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="title">to</span>&gt;</span>
<span class="tag">&lt;<span class="title">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="title">from</span>&gt;</span>
<span class="tag">&lt;<span class="title">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="title">heading</span>&gt;</span>
<span class="tag">&lt;<span class="title">body</span>&gt;</span>Don't forget me this weekend!<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">note</span>&gt;</span>
</code></pre><p>您的回答：是<br>7.这是一个“形式良好”的文档吗？</p>
<pre><code><span class="pi">&lt;?xml version="1.0"?&gt;</span>
<span class="tag">&lt;<span class="title">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="title">to</span>&gt;</span>
<span class="tag">&lt;<span class="title">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="title">from</span>&gt;</span>
<span class="tag">&lt;<span class="title">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="title">heading</span>&gt;</span>
<span class="tag">&lt;<span class="title">body</span>&gt;</span>Don't forget me this weekend!<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
</code></pre><p>您的回答：否<br>8.哪条陈述是正确的？<br><em>您的回答：以上陈述都是正确的</em><br><strong>正确答案：所有XML元素都必须正确地关闭</strong><br>9.哪条陈述是正确的？<br>您的回答：以上陈述都是正确的<br>10.XML可保留空白字符<br>您的回答：正确<br>11.这是一个“形式良好”的文档吗？</p>
<pre><code><span class="pi">&lt;?xml version="1.0"?&gt;</span>
<span class="tag">&lt;<span class="title">note</span>&gt;</span>
<span class="tag">&lt;<span class="title">to</span> <span class="attribute">age</span>=<span class="value">"29"</span>&gt;</span>Tove<span class="tag">&lt;/<span class="title">to</span>&gt;</span>
<span class="tag">&lt;<span class="title">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="title">from</span>&gt;</span>
<span class="tag">&lt;/<span class="title">note</span>&gt;</span>
</code></pre><p>您的回答：是<br>12.这是一个“形式良好”的文档吗？</p>
<pre><code><span class="pi">&lt;?xml version="1.0"?&gt;</span>
<span class="tag">&lt;<span class="title">note</span>&gt;</span>
<span class="tag">&lt;<span class="title">to</span> <span class="attribute">age</span>=<span class="value">29</span>&gt;</span>Tove<span class="tag">&lt;/<span class="title">to</span>&gt;</span>
<span class="tag">&lt;<span class="title">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="title">from</span>&gt;</span>
<span class="tag">&lt;/<span class="title">note</span>&gt;</span>
</code></pre><p>您的回答：否<br>13.XML元素不能为空<br><em>您的回答：正确</em><br><strong>正确答案：错误</strong><br>14.对于一个XML文档，以下哪个名称是错误的？<br>您的回答：<code>&lt;1dollar&gt;</code><br>15.对于一个XML文档，以下哪个名称是错误的？<br>您的回答：<code>&lt;first name&gt;</code><br>16.对于一个XML文档，以下哪个名称是错误的？<br>您的回答：以上三个都不正确<br>17.必须使用引号包围XML的属性值<br>您的回答：正确<br>18.XSL指的是？<br>您的回答：eXtensible Stylesheet Language<br>19.以下哪种方法可正确地引用名为“mystyle.xsl”的样式表？<br>您的回答：<code>&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;mystyle.xsl&quot; ?&gt;</code><br>20.供XML解析器忽略XML文档的特定部分的正确语法是：<br>您的回答：<code>&lt;![CDATA[ Text to be ignored ]]&gt;</code></p>
]]></content>
    <summary type="html">
    <![CDATA[XML 测验]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript Test]]></title>
    <link href="http://snger.github.io/2011/12/05/javascript-test/"/>
    <id>http://snger.github.io/2011/12/05/javascript-test/</id>
    <published>2011-12-05T06:33:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>JS 测验 结果：17/20<br>如果您有兴趣参与测试，可以点<a href="http://www.w3school.com.cn/quiz/quiz.asp?quiz=js" target="_blank" rel="external">这里</a><br>您的回答：<br>1.我们可以在下列哪个 HTML 元素中放置 Javascript 代码？<br>您的回答：<code>&lt;script&gt;</code><br>2.写 “Hello World” 的正确 Javascript 语法是？<br>您的回答：<code>document.write(&quot;Hello World&quot;)</code><br>3.插入 Javacript 的正确位置是？<br>您的回答：&lt;body&gt; 部分和 &lt;head&gt; 部分均可<br>4.引用名为 “xxx.js” 的外部脚本的正确语法是？<br>您的回答：<code>&lt;script src=&quot;xxx.js&quot;&gt;</code><br>5.外部脚本必须包含 &lt;script&gt; 标签吗？<a id="more"></a><br><em>您的回答：是</em><br><strong>正确答案：否</strong><br>6.如何在警告框中写入 “Hello World”？<br>您的回答：<code>alert(&quot;Hello World&quot;)</code><br>7.如何创建函数？<br>您的回答：<code>function myFunction()</code><br>8.如何调用名为 “myFunction” 的函数？<br>您的回答：<code>myFunction()</code><br>9.如何编写当 i 等于 5 时执行一些语句的条件语句？<br>您的回答：<code>if (i==5)</code><br>10.如何编写当 i 不等于 5 时执行一些语句的条件语句？<br>您的回答：<code>if (i != 5)</code><br>11.在 JavaScript 中，有多少种不同类型的循环？<br><em>您的回答：四种。for 循环、while 循环、do…while 循环以及 loop…until 循环。</em><br><strong>正确答案：两种。for 循环和 while 循环。</strong><br>12.for 循环如何开始？<br>您的回答：<code>for (i = 0; i &lt;= 5; i++)</code><br>13.如何在 JavaScript 中添加注释？<br>您的回答：<code>//This is a comment</code><br>14.可插入多行注释的 JavaScript 语法是？<br>您的回答：<code>/*This comment has more than one line*/</code><br>15.定义 JavaScript 数组的正确方法是？<br>您的回答：<code>var txt = new Array(&quot;George&quot;,&quot;John&quot;,&quot;Thomas&quot;)</code><br>16.如何把 7.25 四舍五入为最接近的整数？<br>您的回答：<code>Math.round(7.25)</code><br>17.如何求得 2 和 4 中最大的数？<br>您的回答：<code>Math.max(2,4)</code><br>18.打开名为 “window2” 的新窗口的 JavaScript 语法是？<br>您的回答：<code>window.open(&quot;http://www.w3school.com.cn&quot;,&quot;window2&quot;)</code><br>19.如何在浏览器的状态栏放入一条消息？<br><em>您的回答：<code>window.status(&quot;put your message here&quot;)</code></em><br><strong>正确答案：<code>window.status = &quot;put your message here&quot;</code></strong><br>20.如何获得客户端浏览器的名称？<br>您的回答：<code>navigator.appName</code>  </p>
]]></content>
    <summary type="html">
    <![CDATA[JS 测验]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[XHTML TEST]]></title>
    <link href="http://snger.github.io/2011/12/03/xhtml-test/"/>
    <id>http://snger.github.io/2011/12/03/xhtml-test/</id>
    <published>2011-12-03T00:51:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>XHTML  测验<br>结果：20/20<br>如果您有兴趣参与测试，可以点<a href="http://www.w3school.com.cn/quiz/quiz.asp?quiz=xhtml" target="_blank" rel="external">这里</a><br>您的回答：<br>1.XHTML 指的是？<br>您的回答：EXtensible HyperText Markup Language<br>2.请判断以下说法是否正确：XHTML 是一个 Web 标准。<br>您的回答：正确<br>3.请判断以下说法是否正确：XML 和 HTML 会被 XHTML 取代。<br>您的回答：错误<br>4.请判断以下说法是否正确：HTML 会被 XHTML 取代。<br>您的回答：正确<br>5.在下面的 XHTML 中，哪个可以正确地标记段落？<a id="more"></a><br>您的回答：<code>&lt;p&gt;&lt;/p&gt;</code><br>6.在下面的 XHTML 中，哪个可以正确地标记折行？<br>您的回答：<code>&lt;br /&gt;</code><br>7.下列 XHTML 中的属性和值，哪个是正确的？<br>您的回答：<code>width=&quot;80&quot;</code><br>8.请判断以下说法是否正确：XHTML 中所有的元素都需要关闭。<br>您的回答：正确<br>9.请判断以下说法是否正确：DOCTYPE 没有关闭标签。<br>您的回答：正确<br>10.在 XHTML 文档中哪些元素是强制性的？<br>您的回答：doctype、html、head、body 以及 title<br>11.请判断以下说法是否正确：XHTML 文档必须是格式良好的。<br>您的回答：正确<br>12.下列哪些是格式良好的 XHTML ？<br>您的回答：<code>&lt;p&gt;A &lt;b&gt;&lt;i&gt;short&lt;/i&gt;&lt;/b&gt; paragraph&lt;/p&gt;</code><br>13.下列哪些 lang 属性的用法是正确的？<br>您的回答：<code>&lt;div lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;Hello World!&lt;/div&gt;</code><br>14.哪个属性可替代下列元素的 name 属性： a、applet、frame、iframe、img 以及 map ？<br>您的回答：id 属性<br>15.在 XHTML 中允许简写属性吗？<br>您的回答：否<br>16.所有的 XHTML 文档都需要 doctype 吗？<br>您的回答：是<br>17.在 XHTML 中有哪些不同的 DTD ？<br>您的回答：Strict, Transitional, Frameset<br>18.哪个是最常用的 XHTML DTD ？<br>您的回答：Transitional<br>19.请判断以下说法是否正确：所有的 XHTML 标签和属性都必须是小写的。<br>您的回答：正确<br>20.请判断以下说法是否正确：HTML 5 是 XHTML 的升级版本。<br>您的回答：错误  </p>
]]></content>
    <summary type="html">
    <![CDATA[XHTML  测验]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HTML TEST]]></title>
    <link href="http://snger.github.io/2011/12/02/html-test/"/>
    <id>http://snger.github.io/2011/12/02/html-test/</id>
    <published>2011-12-02T13:52:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>HTML 测验  结果：19/20<br>如果您有兴趣参与测试，可以点<a href="http://www.w3school.com.cn/quiz/quiz.asp?quiz=html" target="_blank" rel="external">这里</a></p>
<p>您的回答：<br>1.HTML 指的是？<br>您的回答：超文本标记语言（Hyper Text Markup Language）<br>2.Web 标准的制定者是？<br>您的回答：万维网联盟（W3C）<br>3.在下列的 HTML 中，哪个是最大的标题？<br>您的回答：<code>&lt;h1&gt;</code><br>4.在下列的 HTML 中，哪个可以插入折行？<a id="more"></a><br>您的回答：<code>&lt;br&gt;</code><br>5.在下列的 HTML 中，哪个可以添加背景颜色？<br>您的回答：<code>&lt;body bgcolor=&quot;yellow&quot;&gt;</code><br>6.请选择产生粗体字的 HTML 标签：<br>您的回答：<code>&lt;b&gt;</code><br>7.请选择产生斜体字的 HTML 标签：<br>您的回答：<code>&lt;i&gt;</code><br>8.在下列的 HTML 中，哪个可以产生超链接？<br>您的回答：<code>&lt;a href=&quot;http://www.w3school.com.cn&quot;&gt;W3School&lt;/a&gt;</code><br>9.如何制作电子邮件链接？<br>您的回答：<code>&lt;a href=&quot;mailto:xxx@yyy&quot;&gt;</code><br>10.如何在新窗口打开链接？<br>您的回答：<code>&lt;a href=&quot;url&quot; target=&quot;_blank&quot;&gt;</code><br>11.以下选项中，哪个全部都是表格标签？<br>您的回答：<code>&lt;table&gt;&lt;tr&gt;&lt;td&gt;</code><br>12.请选择可以使单元格中的内容进行左对齐的正确 HTML 标签：<br>您的回答：<code>&lt;td align=&quot;left&quot;&gt;</code><br>13.如何产生带有数字列表符号的列表？<br>您的回答：<code>&lt;ol&gt;</code><br>14.如何产生带有圆点列表符号的列表？<br>您的回答：<code>&lt;ul&gt;</code><br>15.在下列的 HTML 中，哪个可以产生复选框？<br>您的回答：<code>&lt;input type=&quot;checkbox&quot;&gt;</code><br>16.在下列的 HTML 中，哪个可以产生文本框？<br><span style="color:#dd0000">您的回答：<code>&lt;textfield&gt;</code></span><br>正确答案：<code>&lt;input type=&quot;text&quot;&gt;</code><br>17.在下列的 HTML 中，哪个可以产生下拉列表？<br>您的回答：<code>&lt;select&gt;</code><br>18.在下列的 HTML 中，哪个可以产生文本区（textarea）？<br>您的回答：<code>&lt;textarea&gt;</code><br>19.在下列的 HTML 中，哪个可以插入图像？<br>您的回答：<code>&lt;img src=&quot;image.gif&quot;&gt;</code><br>20.在下列的 HTML 中，哪个可以插入背景图像？<br>您的回答：<code>&lt;body background=&quot;background.gif&quot;&gt;</code>  </p>
]]></content>
    <summary type="html">
    <![CDATA[HTML 测验]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS TEST]]></title>
    <link href="http://snger.github.io/2011/12/01/css-test/"/>
    <id>http://snger.github.io/2011/12/01/css-test/</id>
    <published>2011-12-01T11:34:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>CSS 测验<br>结果：16/20</p>
<p>如果您有兴趣参与测试，可以点<a href="http://www.w3school.com.cn/quiz/quiz.asp?quiz=css" target="_blank" rel="external">这里</a></p>
<p>您的回答：<br>1.CSS 指的是？<br>您的回答：<code>Cascading Style Sheets</code><br>2.在以下的 HTML 中，哪个是正确引用外部样式表的方法？<br>您的回答：<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;</code><br>3.在 HTML 文档中，引用外部样式表的正确位置是？<br>您的回答：&lt;head&gt; 部分<br>4.哪个 HTML 标签用于定义内部样式表？  <a id="more"></a><br>您的回答：<code>&lt;style&gt;</code><br>5.哪个 HTML 属性可用来定义内联样式？<br>您的回答：<code>style</code><br>6.下列哪个选项的 CSS 语法是正确的？<br>您的回答：<code>body {color: black}</code><br>7.如何在 CSS 文件中插入注释？<br>您的回答：<code>/* this is a comment */</code><br>8.哪个属性可用于改变背景颜色？<br>您的回答：<code>background-color:</code><br>9.如何为所有的 &lt;h1&gt; 元素添加背景颜色？<br>您的回答：<code>h1 {background-color:#FFFFFF}</code><br>10.如何改变某个元素的文本颜色？<br><span style="color:#dd0000">您的回答：<code>text-color:</code></span><br>正确答案：<code>color:</code><br>11.哪个 CSS 属性可控制文本的尺寸？<br>您的回答：<code>font-size</code><br>12.在以下的 CSS 中，可使所有 &lt;p&gt; 元素变为粗体的正确语法是？<br>您的回答：<code>p {font-weight:bold}</code><br>13.如何显示没有下划线的超链接？<br>您的回答：<code>a {text-decoration:none}</code><br>14.如何使文本以大写字母开头？<br>您的回答：<code>text-transform:capitalize</code><br>15.如何改变元素的字体？<br>您的回答：<code>font-family:</code><br>16.如何使文本变为粗体？<br>您的回答：<code>font-weight:bold</code><br>17.如何显示这样一个边框：上边框 10 像素、下边框 5 像素、左边框 20 像素、右边框 1 像素？<br><span style="color:#dd0000">您的回答：<code>border-width:10px 5px 20px 1px</code></span><br>正确答案：<code>border-width:10px 1px 5px 20px</code><br>18.如何改变元素的左边距？<br>您的回答：<code>margin-left:</code><br>19.请判断以下说法是否正确：如需定义元素内容与边框间的空间，可使用 padding 属性，并可使用负值？<br><span style="color:#dd0000">您的回答：正确</span><br>正确答案：错误<br>20.如何产生带有正方形项目的列表？<br><span style="color:#dd0000">您的回答：<code>list-type: square</code></span><br>正确答案：<code>list-style-type: square</code>  </p>
<hr>
<p>对自己的成绩不满意，关键是第17题——看着答案都不知所以（实际上还没用过CSS控制边框），于是google之，发现好些人都在这题错了，例如：<a href="http://www.seozsz.com/9fen.html）、[这位](http://blog.csdn.net/wustrive_2008/article/details/6226454" target="_blank" rel="external">这位</a>、<a href="http://wustrive-2008.iteye.com/blog/969906" target="_blank" rel="external">这位</a>、<a href="http://metallica-1860.iteye.com/blog/664428" target="_blank" rel="external">还有这位</a>.<a href="http://m.chenxiaomo.com/index-wap2.php?p=4104" target="_blank" rel="external">Bobo</a>答对了，没在twitter活跃，也没讲解。还是复习去。</p>
<p>update:想起来了，边框的像素若是用<code>border-width:10px 1px 5px 20px</code>,那是正确滴，顺时针……</p>
]]></content>
    <summary type="html">
    <![CDATA[CSS 测验]]>
    
    </summary>
    
      <category term="Web前端" scheme="http://snger.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="读书笔记" scheme="http://snger.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Web前端" scheme="http://snger.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Octopress Issue]]></title>
    <link href="http://snger.github.io/2011/11/28/octopress-issue/"/>
    <id>http://snger.github.io/2011/11/28/octopress-issue/</id>
    <published>2011-11-28T03:43:00.000Z</published>
    <updated>2014-02-25T08:19:58.000Z</updated>
    <content type="html"><![CDATA[<p>不知什麼原因，Octopress的source分支中的_post文件夾沒被track，博客的文章又更新不能，現在先試試rake new_post[“”]，看看效果。</p>
<p>date:2011-11-29 update<br><em>測試結果爲：</em>  </p>
<ul>
<li>使用”git status”,發現_post文件夾沒被track，使用”git add _post”跟蹤。  </li>
<li>測試發文，有效。  </li>
</ul>
<p><em>依舊存在的問題：</em>  <a id="more"></a></p>
<ul>
<li>在github源碼中看不到_post文件夾，不過這也不算壞事。</li>
</ul>
<p><em>經驗：</em>  </p>
<ul>
<li>在批量傳輸舊文時，直接”rake generate”會有一些問題，例如：文章導入不完整，網站索引可能出問題。最好每添一篇文章都生成一次。</li>
<li>更爲主業的測試請進一步閱讀<a href="https://twitter.com/#!/yorkxin" target="_blank" rel="external">@yorkxin</a>的<em>Octopress 搬家記</em>系列，這是第一篇<a href="http://blog.yorkxin.org/2011/11/26/import-from-wpcom-to-octopress" target="_blank" rel="external">http://blog.yorkxin.org/2011/11/26/import-from-wpcom-to-octopress</a>.</li>
</ul>
<p>2011年12月6日09时34分19秒update:<br>在看《progit》时，忽然想到，为什么在github.com的souce分支中看不到_post目录：原来在根据官网指导的那两次<code>git push</code>后自己并没有再上传过；而Octopress的发布日志<code>rake generate</code>,<code>rake deploy</code>与git是相对独立的，<code>rake generate</code>使用<a href="https://github.com/mojombo/jekyll" target="_blank" rel="external">Jekyll</a>生成静态网页，并把结果置于octopress/_delploy目录中，在使用<code>rake deploy</code>后发布到github.com并同步到博客。</p>
]]></content>
    <summary type="html">
    <![CDATA[不知什麼原因，Octopress的source分支中的_post文件夾沒被track，博客的文章又更新不能，現在先試試rake new_post[""]，看看效果。]]>
    
    </summary>
    
      <category term="Octopress" scheme="http://snger.github.io/tags/Octopress/"/>
    
      <category term="博客相关" scheme="http://snger.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
</feed>